#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DACN_QLCF
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DACN_QLQCF")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBan(Ban instance);
    partial void UpdateBan(Ban instance);
    partial void DeleteBan(Ban instance);
    partial void InsertTheThanhVien(TheThanhVien instance);
    partial void UpdateTheThanhVien(TheThanhVien instance);
    partial void DeleteTheThanhVien(TheThanhVien instance);
    partial void InsertBangLuong_NNV(BangLuong_NNV instance);
    partial void UpdateBangLuong_NNV(BangLuong_NNV instance);
    partial void DeleteBangLuong_NNV(BangLuong_NNV instance);
    partial void InsertCT_CT(CT_CT instance);
    partial void UpdateCT_CT(CT_CT instance);
    partial void DeleteCT_CT(CT_CT instance);
    partial void InsertCT_HD(CT_HD instance);
    partial void UpdateCT_HD(CT_HD instance);
    partial void DeleteCT_HD(CT_HD instance);
    partial void InsertCT_Huy(CT_Huy instance);
    partial void UpdateCT_Huy(CT_Huy instance);
    partial void DeleteCT_Huy(CT_Huy instance);
    partial void InsertCT_KT(CT_KT instance);
    partial void UpdateCT_KT(CT_KT instance);
    partial void DeleteCT_KT(CT_KT instance);
    partial void InsertCTBL(CTBL instance);
    partial void UpdateCTBL(CTBL instance);
    partial void DeleteCTBL(CTBL instance);
    partial void InsertCTMon(CTMon instance);
    partial void UpdateCTMon(CTMon instance);
    partial void DeleteCTMon(CTMon instance);
    partial void InsertCTNhapHang(CTNhapHang instance);
    partial void UpdateCTNhapHang(CTNhapHang instance);
    partial void DeleteCTNhapHang(CTNhapHang instance);
    partial void InsertChucVu(ChucVu instance);
    partial void UpdateChucVu(ChucVu instance);
    partial void DeleteChucVu(ChucVu instance);
    partial void InsertChuongTrinhKhuyenMai(ChuongTrinhKhuyenMai instance);
    partial void UpdateChuongTrinhKhuyenMai(ChuongTrinhKhuyenMai instance);
    partial void DeleteChuongTrinhKhuyenMai(ChuongTrinhKhuyenMai instance);
    partial void InsertHangNhap(HangNhap instance);
    partial void UpdateHangNhap(HangNhap instance);
    partial void DeleteHangNhap(HangNhap instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertHoaDonNhap(HoaDonNhap instance);
    partial void UpdateHoaDonNhap(HoaDonNhap instance);
    partial void DeleteHoaDonNhap(HoaDonNhap instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertKhuyenMai(KhuyenMai instance);
    partial void UpdateKhuyenMai(KhuyenMai instance);
    partial void DeleteKhuyenMai(KhuyenMai instance);
    partial void InsertLichLamViec1NV_1N(LichLamViec1NV_1N instance);
    partial void UpdateLichLamViec1NV_1N(LichLamViec1NV_1N instance);
    partial void DeleteLichLamViec1NV_1N(LichLamViec1NV_1N instance);
    partial void InsertMon(Mon instance);
    partial void UpdateMon(Mon instance);
    partial void DeleteMon(Mon instance);
    partial void InsertNguyenLieu(NguyenLieu instance);
    partial void UpdateNguyenLieu(NguyenLieu instance);
    partial void DeleteNguyenLieu(NguyenLieu instance);
    partial void InsertNhaCC(NhaCC instance);
    partial void UpdateNhaCC(NhaCC instance);
    partial void DeleteNhaCC(NhaCC instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhanLoai(PhanLoai instance);
    partial void UpdatePhanLoai(PhanLoai instance);
    partial void DeletePhanLoai(PhanLoai instance);
    partial void InsertPhieuHuy(PhieuHuy instance);
    partial void UpdatePhieuHuy(PhieuHuy instance);
    partial void DeletePhieuHuy(PhieuHuy instance);
    partial void InsertPhieuKiemHangTon(PhieuKiemHangTon instance);
    partial void UpdatePhieuKiemHangTon(PhieuKiemHangTon instance);
    partial void DeletePhieuKiemHangTon(PhieuKiemHangTon instance);
    partial void InsertPhieuNhapHang(PhieuNhapHang instance);
    partial void UpdatePhieuNhapHang(PhieuNhapHang instance);
    partial void DeletePhieuNhapHang(PhieuNhapHang instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DACN_QLCF.Properties.Settings.Default.DACN_QLQCFConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ban> Bans
		{
			get
			{
				return this.GetTable<Ban>();
			}
		}
		
		public System.Data.Linq.Table<TheThanhVien> TheThanhViens
		{
			get
			{
				return this.GetTable<TheThanhVien>();
			}
		}
		
		public System.Data.Linq.Table<BangLuong_NNV> BangLuong_NNVs
		{
			get
			{
				return this.GetTable<BangLuong_NNV>();
			}
		}
		
		public System.Data.Linq.Table<CT_CT> CT_CTs
		{
			get
			{
				return this.GetTable<CT_CT>();
			}
		}
		
		public System.Data.Linq.Table<CT_HD> CT_HDs
		{
			get
			{
				return this.GetTable<CT_HD>();
			}
		}
		
		public System.Data.Linq.Table<CT_Huy> CT_Huys
		{
			get
			{
				return this.GetTable<CT_Huy>();
			}
		}
		
		public System.Data.Linq.Table<CT_KT> CT_KTs
		{
			get
			{
				return this.GetTable<CT_KT>();
			}
		}
		
		public System.Data.Linq.Table<CTBL> CTBLs
		{
			get
			{
				return this.GetTable<CTBL>();
			}
		}
		
		public System.Data.Linq.Table<CTMon> CTMons
		{
			get
			{
				return this.GetTable<CTMon>();
			}
		}
		
		public System.Data.Linq.Table<CTNhapHang> CTNhapHangs
		{
			get
			{
				return this.GetTable<CTNhapHang>();
			}
		}
		
		public System.Data.Linq.Table<ChucVu> ChucVus
		{
			get
			{
				return this.GetTable<ChucVu>();
			}
		}
		
		public System.Data.Linq.Table<ChuongTrinhKhuyenMai> ChuongTrinhKhuyenMais
		{
			get
			{
				return this.GetTable<ChuongTrinhKhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<HangNhap> HangNhaps
		{
			get
			{
				return this.GetTable<HangNhap>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonNhap> HoaDonNhaps
		{
			get
			{
				return this.GetTable<HoaDonNhap>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai> KhuyenMais
		{
			get
			{
				return this.GetTable<KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<LichLamViec1NV_1N> LichLamViec1NV_1Ns
		{
			get
			{
				return this.GetTable<LichLamViec1NV_1N>();
			}
		}
		
		public System.Data.Linq.Table<Mon> Mons
		{
			get
			{
				return this.GetTable<Mon>();
			}
		}
		
		public System.Data.Linq.Table<NguyenLieu> NguyenLieus
		{
			get
			{
				return this.GetTable<NguyenLieu>();
			}
		}
		
		public System.Data.Linq.Table<NhaCC> NhaCCs
		{
			get
			{
				return this.GetTable<NhaCC>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhanLoai> PhanLoais
		{
			get
			{
				return this.GetTable<PhanLoai>();
			}
		}
		
		public System.Data.Linq.Table<PhieuHuy> PhieuHuys
		{
			get
			{
				return this.GetTable<PhieuHuy>();
			}
		}
		
		public System.Data.Linq.Table<PhieuKiemHangTon> PhieuKiemHangTons
		{
			get
			{
				return this.GetTable<PhieuKiemHangTon>();
			}
		}
		
		public System.Data.Linq.Table<PhieuNhapHang> PhieuNhapHangs
		{
			get
			{
				return this.GetTable<PhieuNhapHang>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ban")]
	public partial class Ban : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private string _TenBan;
		
		private string _LoaiBan;
		
		private string _ViTriCuThe;
		
		private EntitySet<HoaDon> _HoaDons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnTenBanChanging(string value);
    partial void OnTenBanChanged();
    partial void OnLoaiBanChanging(string value);
    partial void OnLoaiBanChanged();
    partial void OnViTriCuTheChanging(string value);
    partial void OnViTriCuTheChanged();
    #endregion
		
		public Ban()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBan", DbType="NVarChar(50)")]
		public string TenBan
		{
			get
			{
				return this._TenBan;
			}
			set
			{
				if ((this._TenBan != value))
				{
					this.OnTenBanChanging(value);
					this.SendPropertyChanging();
					this._TenBan = value;
					this.SendPropertyChanged("TenBan");
					this.OnTenBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiBan", DbType="NVarChar(50)")]
		public string LoaiBan
		{
			get
			{
				return this._LoaiBan;
			}
			set
			{
				if ((this._LoaiBan != value))
				{
					this.OnLoaiBanChanging(value);
					this.SendPropertyChanging();
					this._LoaiBan = value;
					this.SendPropertyChanged("LoaiBan");
					this.OnLoaiBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViTriCuThe", DbType="NVarChar(50)")]
		public string ViTriCuThe
		{
			get
			{
				return this._ViTriCuThe;
			}
			set
			{
				if ((this._ViTriCuThe != value))
				{
					this.OnViTriCuTheChanging(value);
					this.SendPropertyChanging();
					this._ViTriCuThe = value;
					this.SendPropertyChanged("ViTriCuThe");
					this.OnViTriCuTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ban_HoaDon", Storage="_HoaDons", ThisKey="STT", OtherKey="STT")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Ban = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Ban = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheThanhVien")]
	public partial class TheThanhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThe;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<int> _DiemTichLuy;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<KhachHang> _KhachHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheChanging(int value);
    partial void OnMaTheChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnDiemTichLuyChanging(System.Nullable<int> value);
    partial void OnDiemTichLuyChanged();
    #endregion
		
		public TheThanhVien()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._KhachHangs = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs), new Action<KhachHang>(this.detach_KhachHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTichLuy", DbType="Int")]
		public System.Nullable<int> DiemTichLuy
		{
			get
			{
				return this._DiemTichLuy;
			}
			set
			{
				if ((this._DiemTichLuy != value))
				{
					this.OnDiemTichLuyChanging(value);
					this.SendPropertyChanging();
					this._DiemTichLuy = value;
					this.SendPropertyChanged("DiemTichLuy");
					this.OnDiemTichLuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheThanhVien_HoaDon", Storage="_HoaDons", ThisKey="MaThe", OtherKey="MaThe")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheThanhVien_KhachHang", Storage="_KhachHangs", ThisKey="MaThe", OtherKey="MaThe")]
		public EntitySet<KhachHang> KhachHangs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.TheThanhVien = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.TheThanhVien = null;
		}
		
		private void attach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.TheThanhVien = this;
		}
		
		private void detach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.TheThanhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangLuong_NNV")]
	public partial class BangLuong_NNV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBL;
		
		private string _Thang;
		
		private string _Nam;
		
		private EntitySet<CTBL> _CTBLs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBLChanging(int value);
    partial void OnMaBLChanged();
    partial void OnThangChanging(string value);
    partial void OnThangChanged();
    partial void OnNamChanging(string value);
    partial void OnNamChanged();
    #endregion
		
		public BangLuong_NNV()
		{
			this._CTBLs = new EntitySet<CTBL>(new Action<CTBL>(this.attach_CTBLs), new Action<CTBL>(this.detach_CTBLs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBL
		{
			get
			{
				return this._MaBL;
			}
			set
			{
				if ((this._MaBL != value))
				{
					this.OnMaBLChanging(value);
					this.SendPropertyChanging();
					this._MaBL = value;
					this.SendPropertyChanged("MaBL");
					this.OnMaBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Char(2)")]
		public string Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this.OnThangChanging(value);
					this.SendPropertyChanging();
					this._Thang = value;
					this.SendPropertyChanged("Thang");
					this.OnThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Char(4)")]
		public string Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this.OnNamChanging(value);
					this.SendPropertyChanging();
					this._Nam = value;
					this.SendPropertyChanged("Nam");
					this.OnNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BangLuong_NNV_CTBL", Storage="_CTBLs", ThisKey="MaBL", OtherKey="MaBL")]
		public EntitySet<CTBL> CTBLs
		{
			get
			{
				return this._CTBLs;
			}
			set
			{
				this._CTBLs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTBLs(CTBL entity)
		{
			this.SendPropertyChanging();
			entity.BangLuong_NNV = this;
		}
		
		private void detach_CTBLs(CTBL entity)
		{
			this.SendPropertyChanging();
			entity.BangLuong_NNV = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_CT")]
	public partial class CT_CT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCT;
		
		private int _MaMon;
		
		private EntityRef<ChuongTrinhKhuyenMai> _ChuongTrinhKhuyenMai;
		
		private EntityRef<Mon> _Mon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTChanging(int value);
    partial void OnMaCTChanged();
    partial void OnMaMonChanging(int value);
    partial void OnMaMonChanged();
    #endregion
		
		public CT_CT()
		{
			this._ChuongTrinhKhuyenMai = default(EntityRef<ChuongTrinhKhuyenMai>);
			this._Mon = default(EntityRef<Mon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCT
		{
			get
			{
				return this._MaCT;
			}
			set
			{
				if ((this._MaCT != value))
				{
					if (this._ChuongTrinhKhuyenMai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCTChanging(value);
					this.SendPropertyChanging();
					this._MaCT = value;
					this.SendPropertyChanged("MaCT");
					this.OnMaCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._Mon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuongTrinhKhuyenMai_CT_CT", Storage="_ChuongTrinhKhuyenMai", ThisKey="MaCT", OtherKey="MaCT", IsForeignKey=true)]
		public ChuongTrinhKhuyenMai ChuongTrinhKhuyenMai
		{
			get
			{
				return this._ChuongTrinhKhuyenMai.Entity;
			}
			set
			{
				ChuongTrinhKhuyenMai previousValue = this._ChuongTrinhKhuyenMai.Entity;
				if (((previousValue != value) 
							|| (this._ChuongTrinhKhuyenMai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuongTrinhKhuyenMai.Entity = null;
						previousValue.CT_CTs.Remove(this);
					}
					this._ChuongTrinhKhuyenMai.Entity = value;
					if ((value != null))
					{
						value.CT_CTs.Add(this);
						this._MaCT = value.MaCT;
					}
					else
					{
						this._MaCT = default(int);
					}
					this.SendPropertyChanged("ChuongTrinhKhuyenMai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_CT_CT", Storage="_Mon", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public Mon Mon
		{
			get
			{
				return this._Mon.Entity;
			}
			set
			{
				Mon previousValue = this._Mon.Entity;
				if (((previousValue != value) 
							|| (this._Mon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mon.Entity = null;
						previousValue.CT_CTs.Remove(this);
					}
					this._Mon.Entity = value;
					if ((value != null))
					{
						value.CT_CTs.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(int);
					}
					this.SendPropertyChanged("Mon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HD")]
	public partial class CT_HD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHoaDon;
		
		private int _MaMon;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<Mon> _Mon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonChanging(int value);
    partial void OnMaHoaDonChanged();
    partial void OnMaMonChanging(int value);
    partial void OnMaMonChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public CT_HD()
		{
			this._HoaDon = default(EntityRef<HoaDon>);
			this._Mon = default(EntityRef<Mon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._Mon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_CT_HD", Storage="_HoaDon", ThisKey="MaHoaDon", OtherKey="MaHoaDon", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.CT_HDs.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.CT_HDs.Add(this);
						this._MaHoaDon = value.MaHoaDon;
					}
					else
					{
						this._MaHoaDon = default(int);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_CT_HD", Storage="_Mon", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public Mon Mon
		{
			get
			{
				return this._Mon.Entity;
			}
			set
			{
				Mon previousValue = this._Mon.Entity;
				if (((previousValue != value) 
							|| (this._Mon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mon.Entity = null;
						previousValue.CT_HDs.Remove(this);
					}
					this._Mon.Entity = value;
					if ((value != null))
					{
						value.CT_HDs.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(int);
					}
					this.SendPropertyChanged("Mon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_Huy")]
	public partial class CT_Huy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieu;
		
		private int _MaNL;
		
		private System.Nullable<int> _SoLuongHuy;
		
		private string _LyDo;
		
		private EntityRef<NguyenLieu> _NguyenLieu;
		
		private EntityRef<PhieuHuy> _PhieuHuy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuChanging(int value);
    partial void OnMaPhieuChanged();
    partial void OnMaNLChanging(int value);
    partial void OnMaNLChanged();
    partial void OnSoLuongHuyChanging(System.Nullable<int> value);
    partial void OnSoLuongHuyChanged();
    partial void OnLyDoChanging(string value);
    partial void OnLyDoChanged();
    #endregion
		
		public CT_Huy()
		{
			this._NguyenLieu = default(EntityRef<NguyenLieu>);
			this._PhieuHuy = default(EntityRef<PhieuHuy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhieu
		{
			get
			{
				return this._MaPhieu;
			}
			set
			{
				if ((this._MaPhieu != value))
				{
					if (this._PhieuHuy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuChanging(value);
					this.SendPropertyChanging();
					this._MaPhieu = value;
					this.SendPropertyChanged("MaPhieu");
					this.OnMaPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNL
		{
			get
			{
				return this._MaNL;
			}
			set
			{
				if ((this._MaNL != value))
				{
					if (this._NguyenLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNLChanging(value);
					this.SendPropertyChanging();
					this._MaNL = value;
					this.SendPropertyChanged("MaNL");
					this.OnMaNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongHuy", DbType="Int")]
		public System.Nullable<int> SoLuongHuy
		{
			get
			{
				return this._SoLuongHuy;
			}
			set
			{
				if ((this._SoLuongHuy != value))
				{
					this.OnSoLuongHuyChanging(value);
					this.SendPropertyChanging();
					this._SoLuongHuy = value;
					this.SendPropertyChanged("SoLuongHuy");
					this.OnSoLuongHuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LyDo", DbType="NVarChar(50)")]
		public string LyDo
		{
			get
			{
				return this._LyDo;
			}
			set
			{
				if ((this._LyDo != value))
				{
					this.OnLyDoChanging(value);
					this.SendPropertyChanging();
					this._LyDo = value;
					this.SendPropertyChanged("LyDo");
					this.OnLyDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenLieu_CT_Huy", Storage="_NguyenLieu", ThisKey="MaNL", OtherKey="MaNL", IsForeignKey=true)]
		public NguyenLieu NguyenLieu
		{
			get
			{
				return this._NguyenLieu.Entity;
			}
			set
			{
				NguyenLieu previousValue = this._NguyenLieu.Entity;
				if (((previousValue != value) 
							|| (this._NguyenLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguyenLieu.Entity = null;
						previousValue.CT_Huys.Remove(this);
					}
					this._NguyenLieu.Entity = value;
					if ((value != null))
					{
						value.CT_Huys.Add(this);
						this._MaNL = value.MaNL;
					}
					else
					{
						this._MaNL = default(int);
					}
					this.SendPropertyChanged("NguyenLieu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuHuy_CT_Huy", Storage="_PhieuHuy", ThisKey="MaPhieu", OtherKey="MaPhieu", IsForeignKey=true)]
		public PhieuHuy PhieuHuy
		{
			get
			{
				return this._PhieuHuy.Entity;
			}
			set
			{
				PhieuHuy previousValue = this._PhieuHuy.Entity;
				if (((previousValue != value) 
							|| (this._PhieuHuy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuHuy.Entity = null;
						previousValue.CT_Huys.Remove(this);
					}
					this._PhieuHuy.Entity = value;
					if ((value != null))
					{
						value.CT_Huys.Add(this);
						this._MaPhieu = value.MaPhieu;
					}
					else
					{
						this._MaPhieu = default(int);
					}
					this.SendPropertyChanged("PhieuHuy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_KT")]
	public partial class CT_KT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuKiem;
		
		private int _MaNL;
		
		private System.Nullable<int> _SoLuongCon;
		
		private EntityRef<NguyenLieu> _NguyenLieu;
		
		private EntityRef<PhieuKiemHangTon> _PhieuKiemHangTon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuKiemChanging(int value);
    partial void OnMaPhieuKiemChanged();
    partial void OnMaNLChanging(int value);
    partial void OnMaNLChanged();
    partial void OnSoLuongConChanging(System.Nullable<int> value);
    partial void OnSoLuongConChanged();
    #endregion
		
		public CT_KT()
		{
			this._NguyenLieu = default(EntityRef<NguyenLieu>);
			this._PhieuKiemHangTon = default(EntityRef<PhieuKiemHangTon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuKiem", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhieuKiem
		{
			get
			{
				return this._MaPhieuKiem;
			}
			set
			{
				if ((this._MaPhieuKiem != value))
				{
					if (this._PhieuKiemHangTon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuKiemChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuKiem = value;
					this.SendPropertyChanged("MaPhieuKiem");
					this.OnMaPhieuKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNL
		{
			get
			{
				return this._MaNL;
			}
			set
			{
				if ((this._MaNL != value))
				{
					if (this._NguyenLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNLChanging(value);
					this.SendPropertyChanging();
					this._MaNL = value;
					this.SendPropertyChanged("MaNL");
					this.OnMaNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongCon", DbType="Int")]
		public System.Nullable<int> SoLuongCon
		{
			get
			{
				return this._SoLuongCon;
			}
			set
			{
				if ((this._SoLuongCon != value))
				{
					this.OnSoLuongConChanging(value);
					this.SendPropertyChanging();
					this._SoLuongCon = value;
					this.SendPropertyChanged("SoLuongCon");
					this.OnSoLuongConChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenLieu_CT_KT", Storage="_NguyenLieu", ThisKey="MaNL", OtherKey="MaNL", IsForeignKey=true)]
		public NguyenLieu NguyenLieu
		{
			get
			{
				return this._NguyenLieu.Entity;
			}
			set
			{
				NguyenLieu previousValue = this._NguyenLieu.Entity;
				if (((previousValue != value) 
							|| (this._NguyenLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguyenLieu.Entity = null;
						previousValue.CT_KTs.Remove(this);
					}
					this._NguyenLieu.Entity = value;
					if ((value != null))
					{
						value.CT_KTs.Add(this);
						this._MaNL = value.MaNL;
					}
					else
					{
						this._MaNL = default(int);
					}
					this.SendPropertyChanged("NguyenLieu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuKiemHangTon_CT_KT", Storage="_PhieuKiemHangTon", ThisKey="MaPhieuKiem", OtherKey="MaPhieuKiem", IsForeignKey=true)]
		public PhieuKiemHangTon PhieuKiemHangTon
		{
			get
			{
				return this._PhieuKiemHangTon.Entity;
			}
			set
			{
				PhieuKiemHangTon previousValue = this._PhieuKiemHangTon.Entity;
				if (((previousValue != value) 
							|| (this._PhieuKiemHangTon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuKiemHangTon.Entity = null;
						previousValue.CT_KTs.Remove(this);
					}
					this._PhieuKiemHangTon.Entity = value;
					if ((value != null))
					{
						value.CT_KTs.Add(this);
						this._MaPhieuKiem = value.MaPhieuKiem;
					}
					else
					{
						this._MaPhieuKiem = default(int);
					}
					this.SendPropertyChanged("PhieuKiemHangTon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTBL")]
	public partial class CTBL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBL;
		
		private int _MaNV;
		
		private System.Nullable<int> _TongGioLam;
		
		private System.Nullable<decimal> _TongLuong;
		
		private EntityRef<BangLuong_NNV> _BangLuong_NNV;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBLChanging(int value);
    partial void OnMaBLChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnTongGioLamChanging(System.Nullable<int> value);
    partial void OnTongGioLamChanged();
    partial void OnTongLuongChanging(System.Nullable<decimal> value);
    partial void OnTongLuongChanged();
    #endregion
		
		public CTBL()
		{
			this._BangLuong_NNV = default(EntityRef<BangLuong_NNV>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBL
		{
			get
			{
				return this._MaBL;
			}
			set
			{
				if ((this._MaBL != value))
				{
					if (this._BangLuong_NNV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBLChanging(value);
					this.SendPropertyChanging();
					this._MaBL = value;
					this.SendPropertyChanged("MaBL");
					this.OnMaBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongGioLam", DbType="Int")]
		public System.Nullable<int> TongGioLam
		{
			get
			{
				return this._TongGioLam;
			}
			set
			{
				if ((this._TongGioLam != value))
				{
					this.OnTongGioLamChanging(value);
					this.SendPropertyChanging();
					this._TongGioLam = value;
					this.SendPropertyChanged("TongGioLam");
					this.OnTongGioLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongLuong", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TongLuong
		{
			get
			{
				return this._TongLuong;
			}
			set
			{
				if ((this._TongLuong != value))
				{
					this.OnTongLuongChanging(value);
					this.SendPropertyChanging();
					this._TongLuong = value;
					this.SendPropertyChanged("TongLuong");
					this.OnTongLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BangLuong_NNV_CTBL", Storage="_BangLuong_NNV", ThisKey="MaBL", OtherKey="MaBL", IsForeignKey=true)]
		public BangLuong_NNV BangLuong_NNV
		{
			get
			{
				return this._BangLuong_NNV.Entity;
			}
			set
			{
				BangLuong_NNV previousValue = this._BangLuong_NNV.Entity;
				if (((previousValue != value) 
							|| (this._BangLuong_NNV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BangLuong_NNV.Entity = null;
						previousValue.CTBLs.Remove(this);
					}
					this._BangLuong_NNV.Entity = value;
					if ((value != null))
					{
						value.CTBLs.Add(this);
						this._MaBL = value.MaBL;
					}
					else
					{
						this._MaBL = default(int);
					}
					this.SendPropertyChanged("BangLuong_NNV");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_CTBL", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.CTBLs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.CTBLs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTMon")]
	public partial class CTMon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNL;
		
		private int _MaMon;
		
		private EntityRef<Mon> _Mon;
		
		private EntityRef<NguyenLieu> _NguyenLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNLChanging(int value);
    partial void OnMaNLChanged();
    partial void OnMaMonChanging(int value);
    partial void OnMaMonChanged();
    #endregion
		
		public CTMon()
		{
			this._Mon = default(EntityRef<Mon>);
			this._NguyenLieu = default(EntityRef<NguyenLieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNL
		{
			get
			{
				return this._MaNL;
			}
			set
			{
				if ((this._MaNL != value))
				{
					if (this._NguyenLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNLChanging(value);
					this.SendPropertyChanging();
					this._MaNL = value;
					this.SendPropertyChanged("MaNL");
					this.OnMaNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._Mon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_CTMon", Storage="_Mon", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public Mon Mon
		{
			get
			{
				return this._Mon.Entity;
			}
			set
			{
				Mon previousValue = this._Mon.Entity;
				if (((previousValue != value) 
							|| (this._Mon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mon.Entity = null;
						previousValue.CTMons.Remove(this);
					}
					this._Mon.Entity = value;
					if ((value != null))
					{
						value.CTMons.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(int);
					}
					this.SendPropertyChanged("Mon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenLieu_CTMon", Storage="_NguyenLieu", ThisKey="MaNL", OtherKey="MaNL", IsForeignKey=true)]
		public NguyenLieu NguyenLieu
		{
			get
			{
				return this._NguyenLieu.Entity;
			}
			set
			{
				NguyenLieu previousValue = this._NguyenLieu.Entity;
				if (((previousValue != value) 
							|| (this._NguyenLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguyenLieu.Entity = null;
						previousValue.CTMons.Remove(this);
					}
					this._NguyenLieu.Entity = value;
					if ((value != null))
					{
						value.CTMons.Add(this);
						this._MaNL = value.MaNL;
					}
					else
					{
						this._MaNL = default(int);
					}
					this.SendPropertyChanged("NguyenLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTNhapHang")]
	public partial class CTNhapHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuNhap;
		
		private int _MaNL;
		
		private System.Nullable<int> _SoLuong;
		
		private EntitySet<HangNhap> _HangNhaps;
		
		private EntityRef<NguyenLieu> _NguyenLieu;
		
		private EntityRef<PhieuNhapHang> _PhieuNhapHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuNhapChanging(int value);
    partial void OnMaPhieuNhapChanged();
    partial void OnMaNLChanging(int value);
    partial void OnMaNLChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public CTNhapHang()
		{
			this._HangNhaps = new EntitySet<HangNhap>(new Action<HangNhap>(this.attach_HangNhaps), new Action<HangNhap>(this.detach_HangNhaps));
			this._NguyenLieu = default(EntityRef<NguyenLieu>);
			this._PhieuNhapHang = default(EntityRef<PhieuNhapHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuNhap", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhieuNhap
		{
			get
			{
				return this._MaPhieuNhap;
			}
			set
			{
				if ((this._MaPhieuNhap != value))
				{
					if (this._PhieuNhapHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuNhapChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuNhap = value;
					this.SendPropertyChanged("MaPhieuNhap");
					this.OnMaPhieuNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNL
		{
			get
			{
				return this._MaNL;
			}
			set
			{
				if ((this._MaNL != value))
				{
					if (this._NguyenLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNLChanging(value);
					this.SendPropertyChanging();
					this._MaNL = value;
					this.SendPropertyChanged("MaNL");
					this.OnMaNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CTNhapHang_HangNhap", Storage="_HangNhaps", ThisKey="MaPhieuNhap,MaNL", OtherKey="MaPhieuNhap,MaNL")]
		public EntitySet<HangNhap> HangNhaps
		{
			get
			{
				return this._HangNhaps;
			}
			set
			{
				this._HangNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenLieu_CTNhapHang", Storage="_NguyenLieu", ThisKey="MaNL", OtherKey="MaNL", IsForeignKey=true)]
		public NguyenLieu NguyenLieu
		{
			get
			{
				return this._NguyenLieu.Entity;
			}
			set
			{
				NguyenLieu previousValue = this._NguyenLieu.Entity;
				if (((previousValue != value) 
							|| (this._NguyenLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguyenLieu.Entity = null;
						previousValue.CTNhapHangs.Remove(this);
					}
					this._NguyenLieu.Entity = value;
					if ((value != null))
					{
						value.CTNhapHangs.Add(this);
						this._MaNL = value.MaNL;
					}
					else
					{
						this._MaNL = default(int);
					}
					this.SendPropertyChanged("NguyenLieu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhapHang_CTNhapHang", Storage="_PhieuNhapHang", ThisKey="MaPhieuNhap", OtherKey="MaPhieuNhap", IsForeignKey=true)]
		public PhieuNhapHang PhieuNhapHang
		{
			get
			{
				return this._PhieuNhapHang.Entity;
			}
			set
			{
				PhieuNhapHang previousValue = this._PhieuNhapHang.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhapHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhapHang.Entity = null;
						previousValue.CTNhapHangs.Remove(this);
					}
					this._PhieuNhapHang.Entity = value;
					if ((value != null))
					{
						value.CTNhapHangs.Add(this);
						this._MaPhieuNhap = value.MaPhieuNhap;
					}
					else
					{
						this._MaPhieuNhap = default(int);
					}
					this.SendPropertyChanged("PhieuNhapHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HangNhaps(HangNhap entity)
		{
			this.SendPropertyChanging();
			entity.CTNhapHang = this;
		}
		
		private void detach_HangNhaps(HangNhap entity)
		{
			this.SendPropertyChanging();
			entity.CTNhapHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucVu")]
	public partial class ChucVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCV;
		
		private string _TenCongViec;
		
		private System.Nullable<decimal> _MucLuong;
		
		private string _DonViTinhLuong;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCVChanging(int value);
    partial void OnMaCVChanged();
    partial void OnTenCongViecChanging(string value);
    partial void OnTenCongViecChanged();
    partial void OnMucLuongChanging(System.Nullable<decimal> value);
    partial void OnMucLuongChanged();
    partial void OnDonViTinhLuongChanging(string value);
    partial void OnDonViTinhLuongChanged();
    #endregion
		
		public ChucVu()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCongViec", DbType="NVarChar(50)")]
		public string TenCongViec
		{
			get
			{
				return this._TenCongViec;
			}
			set
			{
				if ((this._TenCongViec != value))
				{
					this.OnTenCongViecChanging(value);
					this.SendPropertyChanging();
					this._TenCongViec = value;
					this.SendPropertyChanged("TenCongViec");
					this.OnTenCongViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucLuong", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MucLuong
		{
			get
			{
				return this._MucLuong;
			}
			set
			{
				if ((this._MucLuong != value))
				{
					this.OnMucLuongChanging(value);
					this.SendPropertyChanging();
					this._MucLuong = value;
					this.SendPropertyChanged("MucLuong");
					this.OnMucLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViTinhLuong", DbType="NVarChar(10)")]
		public string DonViTinhLuong
		{
			get
			{
				return this._DonViTinhLuong;
			}
			set
			{
				if ((this._DonViTinhLuong != value))
				{
					this.OnDonViTinhLuongChanging(value);
					this.SendPropertyChanging();
					this._DonViTinhLuong = value;
					this.SendPropertyChanged("DonViTinhLuong");
					this.OnDonViTinhLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_NhanVien", Storage="_NhanViens", ThisKey="MaCV", OtherKey="MaCV")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChuongTrinhKhuyenMai")]
	public partial class ChuongTrinhKhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCT;
		
		private int _MaKhuyenMai;
		
		private string _TenCT;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private EntitySet<CT_CT> _CT_CTs;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntityRef<KhuyenMai> _KhuyenMai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTChanging(int value);
    partial void OnMaCTChanged();
    partial void OnMaKhuyenMaiChanging(int value);
    partial void OnMaKhuyenMaiChanged();
    partial void OnTenCTChanging(string value);
    partial void OnTenCTChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public ChuongTrinhKhuyenMai()
		{
			this._CT_CTs = new EntitySet<CT_CT>(new Action<CT_CT>(this.attach_CT_CTs), new Action<CT_CT>(this.detach_CT_CTs));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._KhuyenMai = default(EntityRef<KhuyenMai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCT
		{
			get
			{
				return this._MaCT;
			}
			set
			{
				if ((this._MaCT != value))
				{
					this.OnMaCTChanging(value);
					this.SendPropertyChanging();
					this._MaCT = value;
					this.SendPropertyChanged("MaCT");
					this.OnMaCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhuyenMai", DbType="Int NOT NULL")]
		public int MaKhuyenMai
		{
			get
			{
				return this._MaKhuyenMai;
			}
			set
			{
				if ((this._MaKhuyenMai != value))
				{
					if (this._KhuyenMai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._MaKhuyenMai = value;
					this.SendPropertyChanged("MaKhuyenMai");
					this.OnMaKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCT", DbType="NVarChar(50)")]
		public string TenCT
		{
			get
			{
				return this._TenCT;
			}
			set
			{
				if ((this._TenCT != value))
				{
					this.OnTenCTChanging(value);
					this.SendPropertyChanging();
					this._TenCT = value;
					this.SendPropertyChanged("TenCT");
					this.OnTenCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuongTrinhKhuyenMai_CT_CT", Storage="_CT_CTs", ThisKey="MaCT", OtherKey="MaCT")]
		public EntitySet<CT_CT> CT_CTs
		{
			get
			{
				return this._CT_CTs;
			}
			set
			{
				this._CT_CTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuongTrinhKhuyenMai_HoaDon", Storage="_HoaDons", ThisKey="MaCT", OtherKey="MaCT")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_ChuongTrinhKhuyenMai", Storage="_KhuyenMai", ThisKey="MaKhuyenMai", OtherKey="MaKhuyenMai", IsForeignKey=true)]
		public KhuyenMai KhuyenMai
		{
			get
			{
				return this._KhuyenMai.Entity;
			}
			set
			{
				KhuyenMai previousValue = this._KhuyenMai.Entity;
				if (((previousValue != value) 
							|| (this._KhuyenMai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhuyenMai.Entity = null;
						previousValue.ChuongTrinhKhuyenMais.Remove(this);
					}
					this._KhuyenMai.Entity = value;
					if ((value != null))
					{
						value.ChuongTrinhKhuyenMais.Add(this);
						this._MaKhuyenMai = value.MaKhuyenMai;
					}
					else
					{
						this._MaKhuyenMai = default(int);
					}
					this.SendPropertyChanged("KhuyenMai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_CTs(CT_CT entity)
		{
			this.SendPropertyChanging();
			entity.ChuongTrinhKhuyenMai = this;
		}
		
		private void detach_CT_CTs(CT_CT entity)
		{
			this.SendPropertyChanging();
			entity.ChuongTrinhKhuyenMai = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.ChuongTrinhKhuyenMai = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.ChuongTrinhKhuyenMai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HangNhap")]
	public partial class HangNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHoaDon;
		
		private int _MaPhieuNhap;
		
		private int _MaNL;
		
		private System.Nullable<decimal> _ThanhTien;
		
		private EntityRef<CTNhapHang> _CTNhapHang;
		
		private EntityRef<HoaDonNhap> _HoaDonNhap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonChanging(int value);
    partial void OnMaHoaDonChanged();
    partial void OnMaPhieuNhapChanging(int value);
    partial void OnMaPhieuNhapChanged();
    partial void OnMaNLChanging(int value);
    partial void OnMaNLChanged();
    partial void OnThanhTienChanging(System.Nullable<decimal> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public HangNhap()
		{
			this._CTNhapHang = default(EntityRef<CTNhapHang>);
			this._HoaDonNhap = default(EntityRef<HoaDonNhap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					if (this._HoaDonNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuNhap", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhieuNhap
		{
			get
			{
				return this._MaPhieuNhap;
			}
			set
			{
				if ((this._MaPhieuNhap != value))
				{
					if (this._CTNhapHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuNhapChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuNhap = value;
					this.SendPropertyChanged("MaPhieuNhap");
					this.OnMaPhieuNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNL
		{
			get
			{
				return this._MaNL;
			}
			set
			{
				if ((this._MaNL != value))
				{
					if (this._CTNhapHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNLChanging(value);
					this.SendPropertyChanging();
					this._MaNL = value;
					this.SendPropertyChanged("MaNL");
					this.OnMaNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CTNhapHang_HangNhap", Storage="_CTNhapHang", ThisKey="MaPhieuNhap,MaNL", OtherKey="MaPhieuNhap,MaNL", IsForeignKey=true)]
		public CTNhapHang CTNhapHang
		{
			get
			{
				return this._CTNhapHang.Entity;
			}
			set
			{
				CTNhapHang previousValue = this._CTNhapHang.Entity;
				if (((previousValue != value) 
							|| (this._CTNhapHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTNhapHang.Entity = null;
						previousValue.HangNhaps.Remove(this);
					}
					this._CTNhapHang.Entity = value;
					if ((value != null))
					{
						value.HangNhaps.Add(this);
						this._MaPhieuNhap = value.MaPhieuNhap;
						this._MaNL = value.MaNL;
					}
					else
					{
						this._MaPhieuNhap = default(int);
						this._MaNL = default(int);
					}
					this.SendPropertyChanged("CTNhapHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhap_HangNhap", Storage="_HoaDonNhap", ThisKey="MaHoaDon", OtherKey="MaHoaDon", IsForeignKey=true)]
		public HoaDonNhap HoaDonNhap
		{
			get
			{
				return this._HoaDonNhap.Entity;
			}
			set
			{
				HoaDonNhap previousValue = this._HoaDonNhap.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonNhap.Entity = null;
						previousValue.HangNhaps.Remove(this);
					}
					this._HoaDonNhap.Entity = value;
					if ((value != null))
					{
						value.HangNhaps.Add(this);
						this._MaHoaDon = value.MaHoaDon;
					}
					else
					{
						this._MaHoaDon = default(int);
					}
					this.SendPropertyChanged("HoaDonNhap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHoaDon;
		
		private System.Nullable<int> _MaThe;
		
		private System.Nullable<int> _MaCT;
		
		private int _STT;
		
		private int _MaNV;
		
		private string _TenHoaDon;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<decimal> _SoTienDua;
		
		private System.Nullable<decimal> _TienHoanTra;
		
		private System.Nullable<decimal> _ThanhTien;
		
		private System.Nullable<decimal> _TongTien;
		
		private EntitySet<CT_HD> _CT_HDs;
		
		private EntityRef<ChuongTrinhKhuyenMai> _ChuongTrinhKhuyenMai;
		
		private EntityRef<TheThanhVien> _TheThanhVien;
		
		private EntityRef<Ban> _Ban;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonChanging(int value);
    partial void OnMaHoaDonChanged();
    partial void OnMaTheChanging(System.Nullable<int> value);
    partial void OnMaTheChanged();
    partial void OnMaCTChanging(System.Nullable<int> value);
    partial void OnMaCTChanged();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnTenHoaDonChanging(string value);
    partial void OnTenHoaDonChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnSoTienDuaChanging(System.Nullable<decimal> value);
    partial void OnSoTienDuaChanged();
    partial void OnTienHoanTraChanging(System.Nullable<decimal> value);
    partial void OnTienHoanTraChanged();
    partial void OnThanhTienChanging(System.Nullable<decimal> value);
    partial void OnThanhTienChanged();
    partial void OnTongTienChanging(System.Nullable<decimal> value);
    partial void OnTongTienChanged();
    #endregion
		
		public HoaDon()
		{
			this._CT_HDs = new EntitySet<CT_HD>(new Action<CT_HD>(this.attach_CT_HDs), new Action<CT_HD>(this.detach_CT_HDs));
			this._ChuongTrinhKhuyenMai = default(EntityRef<ChuongTrinhKhuyenMai>);
			this._TheThanhVien = default(EntityRef<TheThanhVien>);
			this._Ban = default(EntityRef<Ban>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="Int")]
		public System.Nullable<int> MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					if (this._TheThanhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCT", DbType="Int")]
		public System.Nullable<int> MaCT
		{
			get
			{
				return this._MaCT;
			}
			set
			{
				if ((this._MaCT != value))
				{
					if (this._ChuongTrinhKhuyenMai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCTChanging(value);
					this.SendPropertyChanging();
					this._MaCT = value;
					this.SendPropertyChanged("MaCT");
					this.OnMaCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", DbType="Int NOT NULL")]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					if (this._Ban.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL")]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHoaDon", DbType="NVarChar(50)")]
		public string TenHoaDon
		{
			get
			{
				return this._TenHoaDon;
			}
			set
			{
				if ((this._TenHoaDon != value))
				{
					this.OnTenHoaDonChanging(value);
					this.SendPropertyChanging();
					this._TenHoaDon = value;
					this.SendPropertyChanged("TenHoaDon");
					this.OnTenHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTienDua", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SoTienDua
		{
			get
			{
				return this._SoTienDua;
			}
			set
			{
				if ((this._SoTienDua != value))
				{
					this.OnSoTienDuaChanging(value);
					this.SendPropertyChanging();
					this._SoTienDua = value;
					this.SendPropertyChanged("SoTienDua");
					this.OnSoTienDuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienHoanTra", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TienHoanTra
		{
			get
			{
				return this._TienHoanTra;
			}
			set
			{
				if ((this._TienHoanTra != value))
				{
					this.OnTienHoanTraChanging(value);
					this.SendPropertyChanging();
					this._TienHoanTra = value;
					this.SendPropertyChanged("TienHoanTra");
					this.OnTienHoanTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_CT_HD", Storage="_CT_HDs", ThisKey="MaHoaDon", OtherKey="MaHoaDon")]
		public EntitySet<CT_HD> CT_HDs
		{
			get
			{
				return this._CT_HDs;
			}
			set
			{
				this._CT_HDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuongTrinhKhuyenMai_HoaDon", Storage="_ChuongTrinhKhuyenMai", ThisKey="MaCT", OtherKey="MaCT", IsForeignKey=true)]
		public ChuongTrinhKhuyenMai ChuongTrinhKhuyenMai
		{
			get
			{
				return this._ChuongTrinhKhuyenMai.Entity;
			}
			set
			{
				ChuongTrinhKhuyenMai previousValue = this._ChuongTrinhKhuyenMai.Entity;
				if (((previousValue != value) 
							|| (this._ChuongTrinhKhuyenMai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuongTrinhKhuyenMai.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._ChuongTrinhKhuyenMai.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaCT = value.MaCT;
					}
					else
					{
						this._MaCT = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChuongTrinhKhuyenMai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheThanhVien_HoaDon", Storage="_TheThanhVien", ThisKey="MaThe", OtherKey="MaThe", IsForeignKey=true)]
		public TheThanhVien TheThanhVien
		{
			get
			{
				return this._TheThanhVien.Entity;
			}
			set
			{
				TheThanhVien previousValue = this._TheThanhVien.Entity;
				if (((previousValue != value) 
							|| (this._TheThanhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheThanhVien.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._TheThanhVien.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaThe = value.MaThe;
					}
					else
					{
						this._MaThe = default(Nullable<int>);
					}
					this.SendPropertyChanged("TheThanhVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ban_HoaDon", Storage="_Ban", ThisKey="STT", OtherKey="STT", IsForeignKey=true)]
		public Ban Ban
		{
			get
			{
				return this._Ban.Entity;
			}
			set
			{
				Ban previousValue = this._Ban.Entity;
				if (((previousValue != value) 
							|| (this._Ban.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ban.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._Ban.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._STT = value.STT;
					}
					else
					{
						this._STT = default(int);
					}
					this.SendPropertyChanged("Ban");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HDs(CT_HD entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_CT_HDs(CT_HD entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonNhap")]
	public partial class HoaDonNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHoaDon;
		
		private string _TenHoaDon;
		
		private System.Nullable<System.DateTime> _NgayGiaoHang;
		
		private int _MaNV;
		
		private System.Nullable<decimal> _TongTien;
		
		private EntitySet<HangNhap> _HangNhaps;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonChanging(int value);
    partial void OnMaHoaDonChanged();
    partial void OnTenHoaDonChanging(string value);
    partial void OnTenHoaDonChanged();
    partial void OnNgayGiaoHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoHangChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnTongTienChanging(System.Nullable<decimal> value);
    partial void OnTongTienChanged();
    #endregion
		
		public HoaDonNhap()
		{
			this._HangNhaps = new EntitySet<HangNhap>(new Action<HangNhap>(this.attach_HangNhaps), new Action<HangNhap>(this.detach_HangNhaps));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHoaDon", DbType="NVarChar(50)")]
		public string TenHoaDon
		{
			get
			{
				return this._TenHoaDon;
			}
			set
			{
				if ((this._TenHoaDon != value))
				{
					this.OnTenHoaDonChanging(value);
					this.SendPropertyChanging();
					this._TenHoaDon = value;
					this.SendPropertyChanged("TenHoaDon");
					this.OnTenHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiaoHang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayGiaoHang
		{
			get
			{
				return this._NgayGiaoHang;
			}
			set
			{
				if ((this._NgayGiaoHang != value))
				{
					this.OnNgayGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._NgayGiaoHang = value;
					this.SendPropertyChanged("NgayGiaoHang");
					this.OnNgayGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL")]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhap_HangNhap", Storage="_HangNhaps", ThisKey="MaHoaDon", OtherKey="MaHoaDon")]
		public EntitySet<HangNhap> HangNhaps
		{
			get
			{
				return this._HangNhaps;
			}
			set
			{
				this._HangNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonNhap", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDonNhaps.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDonNhaps.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HangNhaps(HangNhap entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhap = this;
		}
		
		private void detach_HangNhaps(HangNhap entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _TenKH;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private int _MaThe;
		
		private EntityRef<TheThanhVien> _TheThanhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnMaTheChanging(int value);
    partial void OnMaTheChanged();
    #endregion
		
		public KhachHang()
		{
			this._TheThanhVien = default(EntityRef<TheThanhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="Int NOT NULL")]
		public int MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					if (this._TheThanhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheThanhVien_KhachHang", Storage="_TheThanhVien", ThisKey="MaThe", OtherKey="MaThe", IsForeignKey=true)]
		public TheThanhVien TheThanhVien
		{
			get
			{
				return this._TheThanhVien.Entity;
			}
			set
			{
				TheThanhVien previousValue = this._TheThanhVien.Entity;
				if (((previousValue != value) 
							|| (this._TheThanhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheThanhVien.Entity = null;
						previousValue.KhachHangs.Remove(this);
					}
					this._TheThanhVien.Entity = value;
					if ((value != null))
					{
						value.KhachHangs.Add(this);
						this._MaThe = value.MaThe;
					}
					else
					{
						this._MaThe = default(int);
					}
					this.SendPropertyChanged("TheThanhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai")]
	public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhuyenMai;
		
		private string _TenKhuyenMai;
		
		private string _GhiChu;
		
		private string _DieuKienApDung;
		
		private System.Nullable<decimal> _PhanTramKhuyenMai;
		
		private EntitySet<ChuongTrinhKhuyenMai> _ChuongTrinhKhuyenMais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhuyenMaiChanging(int value);
    partial void OnMaKhuyenMaiChanged();
    partial void OnTenKhuyenMaiChanging(string value);
    partial void OnTenKhuyenMaiChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnDieuKienApDungChanging(string value);
    partial void OnDieuKienApDungChanged();
    partial void OnPhanTramKhuyenMaiChanging(System.Nullable<decimal> value);
    partial void OnPhanTramKhuyenMaiChanged();
    #endregion
		
		public KhuyenMai()
		{
			this._ChuongTrinhKhuyenMais = new EntitySet<ChuongTrinhKhuyenMai>(new Action<ChuongTrinhKhuyenMai>(this.attach_ChuongTrinhKhuyenMais), new Action<ChuongTrinhKhuyenMai>(this.detach_ChuongTrinhKhuyenMais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhuyenMai", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKhuyenMai
		{
			get
			{
				return this._MaKhuyenMai;
			}
			set
			{
				if ((this._MaKhuyenMai != value))
				{
					this.OnMaKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._MaKhuyenMai = value;
					this.SendPropertyChanged("MaKhuyenMai");
					this.OnMaKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhuyenMai", DbType="NVarChar(50)")]
		public string TenKhuyenMai
		{
			get
			{
				return this._TenKhuyenMai;
			}
			set
			{
				if ((this._TenKhuyenMai != value))
				{
					this.OnTenKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._TenKhuyenMai = value;
					this.SendPropertyChanged("TenKhuyenMai");
					this.OnTenKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DieuKienApDung", DbType="NVarChar(50)")]
		public string DieuKienApDung
		{
			get
			{
				return this._DieuKienApDung;
			}
			set
			{
				if ((this._DieuKienApDung != value))
				{
					this.OnDieuKienApDungChanging(value);
					this.SendPropertyChanging();
					this._DieuKienApDung = value;
					this.SendPropertyChanged("DieuKienApDung");
					this.OnDieuKienApDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanTramKhuyenMai", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PhanTramKhuyenMai
		{
			get
			{
				return this._PhanTramKhuyenMai;
			}
			set
			{
				if ((this._PhanTramKhuyenMai != value))
				{
					this.OnPhanTramKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._PhanTramKhuyenMai = value;
					this.SendPropertyChanged("PhanTramKhuyenMai");
					this.OnPhanTramKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_ChuongTrinhKhuyenMai", Storage="_ChuongTrinhKhuyenMais", ThisKey="MaKhuyenMai", OtherKey="MaKhuyenMai")]
		public EntitySet<ChuongTrinhKhuyenMai> ChuongTrinhKhuyenMais
		{
			get
			{
				return this._ChuongTrinhKhuyenMais;
			}
			set
			{
				this._ChuongTrinhKhuyenMais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChuongTrinhKhuyenMais(ChuongTrinhKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = this;
		}
		
		private void detach_ChuongTrinhKhuyenMais(ChuongTrinhKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichLamViec1NV_1N")]
	public partial class LichLamViec1NV_1N : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _MaLich;
		
		private int _MaNV;
		
		private System.Nullable<System.DateTime> _NgayThang;
		
		private System.Nullable<System.TimeSpan> _giobd;
		
		private System.Nullable<System.TimeSpan> _giokt;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLichChanging(char value);
    partial void OnMaLichChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnNgayThangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThangChanged();
    partial void OngiobdChanging(System.Nullable<System.TimeSpan> value);
    partial void OngiobdChanged();
    partial void OngioktChanging(System.Nullable<System.TimeSpan> value);
    partial void OngioktChanged();
    #endregion
		
		public LichLamViec1NV_1N()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLich", DbType="Char(1) NOT NULL", IsPrimaryKey=true)]
		public char MaLich
		{
			get
			{
				return this._MaLich;
			}
			set
			{
				if ((this._MaLich != value))
				{
					this.OnMaLichChanging(value);
					this.SendPropertyChanging();
					this._MaLich = value;
					this.SendPropertyChanged("MaLich");
					this.OnMaLichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL")]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThang
		{
			get
			{
				return this._NgayThang;
			}
			set
			{
				if ((this._NgayThang != value))
				{
					this.OnNgayThangChanging(value);
					this.SendPropertyChanging();
					this._NgayThang = value;
					this.SendPropertyChanged("NgayThang");
					this.OnNgayThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giobd", DbType="Time")]
		public System.Nullable<System.TimeSpan> giobd
		{
			get
			{
				return this._giobd;
			}
			set
			{
				if ((this._giobd != value))
				{
					this.OngiobdChanging(value);
					this.SendPropertyChanging();
					this._giobd = value;
					this.SendPropertyChanged("giobd");
					this.OngiobdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giokt", DbType="Time")]
		public System.Nullable<System.TimeSpan> giokt
		{
			get
			{
				return this._giokt;
			}
			set
			{
				if ((this._giokt != value))
				{
					this.OngioktChanging(value);
					this.SendPropertyChanging();
					this._giokt = value;
					this.SendPropertyChanged("giokt");
					this.OngioktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_LichLamViec1NV_1N", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.LichLamViec1NV_1Ns.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.LichLamViec1NV_1Ns.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mon")]
	public partial class Mon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMon;
		
		private int _MaLoai;
		
		private string _TenMon;
		
		private System.Nullable<decimal> _DonGia;
		
		private System.Nullable<int> _TrangThai;
		
		private string _GhiChu;
		
		private EntitySet<CT_CT> _CT_CTs;
		
		private EntitySet<CT_HD> _CT_HDs;
		
		private EntitySet<CTMon> _CTMons;
		
		private EntityRef<PhanLoai> _PhanLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonChanging(int value);
    partial void OnMaMonChanged();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    partial void OnTenMonChanging(string value);
    partial void OnTenMonChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    partial void OnTrangThaiChanging(System.Nullable<int> value);
    partial void OnTrangThaiChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public Mon()
		{
			this._CT_CTs = new EntitySet<CT_CT>(new Action<CT_CT>(this.attach_CT_CTs), new Action<CT_CT>(this.detach_CT_CTs));
			this._CT_HDs = new EntitySet<CT_HD>(new Action<CT_HD>(this.attach_CT_HDs), new Action<CT_HD>(this.detach_CT_HDs));
			this._CTMons = new EntitySet<CTMon>(new Action<CTMon>(this.attach_CTMons), new Action<CTMon>(this.detach_CTMons));
			this._PhanLoai = default(EntityRef<PhanLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Int NOT NULL")]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._PhanLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMon", DbType="NVarChar(50)")]
		public string TenMon
		{
			get
			{
				return this._TenMon;
			}
			set
			{
				if ((this._TenMon != value))
				{
					this.OnTenMonChanging(value);
					this.SendPropertyChanging();
					this._TenMon = value;
					this.SendPropertyChanged("TenMon");
					this.OnTenMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_CT_CT", Storage="_CT_CTs", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<CT_CT> CT_CTs
		{
			get
			{
				return this._CT_CTs;
			}
			set
			{
				this._CT_CTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_CT_HD", Storage="_CT_HDs", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<CT_HD> CT_HDs
		{
			get
			{
				return this._CT_HDs;
			}
			set
			{
				this._CT_HDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_CTMon", Storage="_CTMons", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<CTMon> CTMons
		{
			get
			{
				return this._CTMons;
			}
			set
			{
				this._CTMons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanLoai_Mon", Storage="_PhanLoai", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public PhanLoai PhanLoai
		{
			get
			{
				return this._PhanLoai.Entity;
			}
			set
			{
				PhanLoai previousValue = this._PhanLoai.Entity;
				if (((previousValue != value) 
							|| (this._PhanLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhanLoai.Entity = null;
						previousValue.Mons.Remove(this);
					}
					this._PhanLoai.Entity = value;
					if ((value != null))
					{
						value.Mons.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(int);
					}
					this.SendPropertyChanged("PhanLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_CTs(CT_CT entity)
		{
			this.SendPropertyChanging();
			entity.Mon = this;
		}
		
		private void detach_CT_CTs(CT_CT entity)
		{
			this.SendPropertyChanging();
			entity.Mon = null;
		}
		
		private void attach_CT_HDs(CT_HD entity)
		{
			this.SendPropertyChanging();
			entity.Mon = this;
		}
		
		private void detach_CT_HDs(CT_HD entity)
		{
			this.SendPropertyChanging();
			entity.Mon = null;
		}
		
		private void attach_CTMons(CTMon entity)
		{
			this.SendPropertyChanging();
			entity.Mon = this;
		}
		
		private void detach_CTMons(CTMon entity)
		{
			this.SendPropertyChanging();
			entity.Mon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguyenLieu")]
	public partial class NguyenLieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNL;
		
		private string _TenNL;
		
		private System.Nullable<System.DateTime> _NSX;
		
		private System.Nullable<System.DateTime> _HSD;
		
		private System.Nullable<decimal> _GiaTien;
		
		private EntitySet<CT_Huy> _CT_Huys;
		
		private EntitySet<CT_KT> _CT_KTs;
		
		private EntitySet<CTMon> _CTMons;
		
		private EntitySet<CTNhapHang> _CTNhapHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNLChanging(int value);
    partial void OnMaNLChanged();
    partial void OnTenNLChanging(string value);
    partial void OnTenNLChanged();
    partial void OnNSXChanging(System.Nullable<System.DateTime> value);
    partial void OnNSXChanged();
    partial void OnHSDChanging(System.Nullable<System.DateTime> value);
    partial void OnHSDChanged();
    partial void OnGiaTienChanging(System.Nullable<decimal> value);
    partial void OnGiaTienChanged();
    #endregion
		
		public NguyenLieu()
		{
			this._CT_Huys = new EntitySet<CT_Huy>(new Action<CT_Huy>(this.attach_CT_Huys), new Action<CT_Huy>(this.detach_CT_Huys));
			this._CT_KTs = new EntitySet<CT_KT>(new Action<CT_KT>(this.attach_CT_KTs), new Action<CT_KT>(this.detach_CT_KTs));
			this._CTMons = new EntitySet<CTMon>(new Action<CTMon>(this.attach_CTMons), new Action<CTMon>(this.detach_CTMons));
			this._CTNhapHangs = new EntitySet<CTNhapHang>(new Action<CTNhapHang>(this.attach_CTNhapHangs), new Action<CTNhapHang>(this.detach_CTNhapHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNL
		{
			get
			{
				return this._MaNL;
			}
			set
			{
				if ((this._MaNL != value))
				{
					this.OnMaNLChanging(value);
					this.SendPropertyChanging();
					this._MaNL = value;
					this.SendPropertyChanged("MaNL");
					this.OnMaNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNL", DbType="NVarChar(50)")]
		public string TenNL
		{
			get
			{
				return this._TenNL;
			}
			set
			{
				if ((this._TenNL != value))
				{
					this.OnTenNLChanging(value);
					this.SendPropertyChanging();
					this._TenNL = value;
					this.SendPropertyChanged("TenNL");
					this.OnTenNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSX", DbType="DateTime")]
		public System.Nullable<System.DateTime> NSX
		{
			get
			{
				return this._NSX;
			}
			set
			{
				if ((this._NSX != value))
				{
					this.OnNSXChanging(value);
					this.SendPropertyChanging();
					this._NSX = value;
					this.SendPropertyChanged("NSX");
					this.OnNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSD", DbType="DateTime")]
		public System.Nullable<System.DateTime> HSD
		{
			get
			{
				return this._HSD;
			}
			set
			{
				if ((this._HSD != value))
				{
					this.OnHSDChanging(value);
					this.SendPropertyChanging();
					this._HSD = value;
					this.SendPropertyChanged("HSD");
					this.OnHSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> GiaTien
		{
			get
			{
				return this._GiaTien;
			}
			set
			{
				if ((this._GiaTien != value))
				{
					this.OnGiaTienChanging(value);
					this.SendPropertyChanging();
					this._GiaTien = value;
					this.SendPropertyChanged("GiaTien");
					this.OnGiaTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenLieu_CT_Huy", Storage="_CT_Huys", ThisKey="MaNL", OtherKey="MaNL")]
		public EntitySet<CT_Huy> CT_Huys
		{
			get
			{
				return this._CT_Huys;
			}
			set
			{
				this._CT_Huys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenLieu_CT_KT", Storage="_CT_KTs", ThisKey="MaNL", OtherKey="MaNL")]
		public EntitySet<CT_KT> CT_KTs
		{
			get
			{
				return this._CT_KTs;
			}
			set
			{
				this._CT_KTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenLieu_CTMon", Storage="_CTMons", ThisKey="MaNL", OtherKey="MaNL")]
		public EntitySet<CTMon> CTMons
		{
			get
			{
				return this._CTMons;
			}
			set
			{
				this._CTMons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenLieu_CTNhapHang", Storage="_CTNhapHangs", ThisKey="MaNL", OtherKey="MaNL")]
		public EntitySet<CTNhapHang> CTNhapHangs
		{
			get
			{
				return this._CTNhapHangs;
			}
			set
			{
				this._CTNhapHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_Huys(CT_Huy entity)
		{
			this.SendPropertyChanging();
			entity.NguyenLieu = this;
		}
		
		private void detach_CT_Huys(CT_Huy entity)
		{
			this.SendPropertyChanging();
			entity.NguyenLieu = null;
		}
		
		private void attach_CT_KTs(CT_KT entity)
		{
			this.SendPropertyChanging();
			entity.NguyenLieu = this;
		}
		
		private void detach_CT_KTs(CT_KT entity)
		{
			this.SendPropertyChanging();
			entity.NguyenLieu = null;
		}
		
		private void attach_CTMons(CTMon entity)
		{
			this.SendPropertyChanging();
			entity.NguyenLieu = this;
		}
		
		private void detach_CTMons(CTMon entity)
		{
			this.SendPropertyChanging();
			entity.NguyenLieu = null;
		}
		
		private void attach_CTNhapHangs(CTNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NguyenLieu = this;
		}
		
		private void detach_CTNhapHangs(CTNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NguyenLieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCC")]
	public partial class NhaCC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNCC;
		
		private string _TenNCC;
		
		private string _DiaChiCuThe;
		
		private string _SDT;
		
		private EntitySet<PhieuNhapHang> _PhieuNhapHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(int value);
    partial void OnMaNCCChanged();
    partial void OnTenNCCChanging(string value);
    partial void OnTenNCCChanged();
    partial void OnDiaChiCuTheChanging(string value);
    partial void OnDiaChiCuTheChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NhaCC()
		{
			this._PhieuNhapHangs = new EntitySet<PhieuNhapHang>(new Action<PhieuNhapHang>(this.attach_PhieuNhapHangs), new Action<PhieuNhapHang>(this.detach_PhieuNhapHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNCC", DbType="NVarChar(50)")]
		public string TenNCC
		{
			get
			{
				return this._TenNCC;
			}
			set
			{
				if ((this._TenNCC != value))
				{
					this.OnTenNCCChanging(value);
					this.SendPropertyChanging();
					this._TenNCC = value;
					this.SendPropertyChanged("TenNCC");
					this.OnTenNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiCuThe", DbType="NVarChar(50)")]
		public string DiaChiCuThe
		{
			get
			{
				return this._DiaChiCuThe;
			}
			set
			{
				if ((this._DiaChiCuThe != value))
				{
					this.OnDiaChiCuTheChanging(value);
					this.SendPropertyChanging();
					this._DiaChiCuThe = value;
					this.SendPropertyChanged("DiaChiCuThe");
					this.OnDiaChiCuTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCC_PhieuNhapHang", Storage="_PhieuNhapHangs", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<PhieuNhapHang> PhieuNhapHangs
		{
			get
			{
				return this._PhieuNhapHangs;
			}
			set
			{
				this._PhieuNhapHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuNhapHangs(PhieuNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NhaCC = this;
		}
		
		private void detach_PhieuNhapHangs(PhieuNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NhaCC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNV;
		
		private int _MaCV;
		
		private string _TenNhanVien;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private string _Email;
		
		private System.DateTime _NgaySinh;
		
		private int _GioiTinh;
		
		private System.DateTime _NgayVaoLam;
		
		private EntitySet<CTBL> _CTBLs;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<HoaDonNhap> _HoaDonNhaps;
		
		private EntitySet<LichLamViec1NV_1N> _LichLamViec1NV_1Ns;
		
		private EntitySet<PhieuHuy> _PhieuHuys;
		
		private EntitySet<PhieuKiemHangTon> _PhieuKiemHangTons;
		
		private EntitySet<PhieuNhapHang> _PhieuNhapHangs;
		
		private EntityRef<ChucVu> _ChucVu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnMaCVChanging(int value);
    partial void OnMaCVChanged();
    partial void OnTenNhanVienChanging(string value);
    partial void OnTenNhanVienChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(int value);
    partial void OnGioiTinhChanged();
    partial void OnNgayVaoLamChanging(System.DateTime value);
    partial void OnNgayVaoLamChanged();
    #endregion
		
		public NhanVien()
		{
			this._CTBLs = new EntitySet<CTBL>(new Action<CTBL>(this.attach_CTBLs), new Action<CTBL>(this.detach_CTBLs));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._HoaDonNhaps = new EntitySet<HoaDonNhap>(new Action<HoaDonNhap>(this.attach_HoaDonNhaps), new Action<HoaDonNhap>(this.detach_HoaDonNhaps));
			this._LichLamViec1NV_1Ns = new EntitySet<LichLamViec1NV_1N>(new Action<LichLamViec1NV_1N>(this.attach_LichLamViec1NV_1Ns), new Action<LichLamViec1NV_1N>(this.detach_LichLamViec1NV_1Ns));
			this._PhieuHuys = new EntitySet<PhieuHuy>(new Action<PhieuHuy>(this.attach_PhieuHuys), new Action<PhieuHuy>(this.detach_PhieuHuys));
			this._PhieuKiemHangTons = new EntitySet<PhieuKiemHangTon>(new Action<PhieuKiemHangTon>(this.attach_PhieuKiemHangTons), new Action<PhieuKiemHangTon>(this.detach_PhieuKiemHangTons));
			this._PhieuNhapHangs = new EntitySet<PhieuNhapHang>(new Action<PhieuNhapHang>(this.attach_PhieuNhapHangs), new Action<PhieuNhapHang>(this.detach_PhieuNhapHangs));
			this._ChucVu = default(EntityRef<ChucVu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", DbType="Int NOT NULL")]
		public int MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					if (this._ChucVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhanVien", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNhanVien
		{
			get
			{
				return this._TenNhanVien;
			}
			set
			{
				if ((this._TenNhanVien != value))
				{
					this.OnTenNhanVienChanging(value);
					this.SendPropertyChanging();
					this._TenNhanVien = value;
					this.SendPropertyChanged("TenNhanVien");
					this.OnTenNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Int NOT NULL")]
		public int GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayVaoLam", DbType="DateTime NOT NULL")]
		public System.DateTime NgayVaoLam
		{
			get
			{
				return this._NgayVaoLam;
			}
			set
			{
				if ((this._NgayVaoLam != value))
				{
					this.OnNgayVaoLamChanging(value);
					this.SendPropertyChanging();
					this._NgayVaoLam = value;
					this.SendPropertyChanged("NgayVaoLam");
					this.OnNgayVaoLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_CTBL", Storage="_CTBLs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<CTBL> CTBLs
		{
			get
			{
				return this._CTBLs;
			}
			set
			{
				this._CTBLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_HoaDons", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonNhap", Storage="_HoaDonNhaps", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<HoaDonNhap> HoaDonNhaps
		{
			get
			{
				return this._HoaDonNhaps;
			}
			set
			{
				this._HoaDonNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_LichLamViec1NV_1N", Storage="_LichLamViec1NV_1Ns", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<LichLamViec1NV_1N> LichLamViec1NV_1Ns
		{
			get
			{
				return this._LichLamViec1NV_1Ns;
			}
			set
			{
				this._LichLamViec1NV_1Ns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuHuy", Storage="_PhieuHuys", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PhieuHuy> PhieuHuys
		{
			get
			{
				return this._PhieuHuys;
			}
			set
			{
				this._PhieuHuys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuKiemHangTon", Storage="_PhieuKiemHangTons", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PhieuKiemHangTon> PhieuKiemHangTons
		{
			get
			{
				return this._PhieuKiemHangTons;
			}
			set
			{
				this._PhieuKiemHangTons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhapHang", Storage="_PhieuNhapHangs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PhieuNhapHang> PhieuNhapHangs
		{
			get
			{
				return this._PhieuNhapHangs;
			}
			set
			{
				this._PhieuNhapHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_NhanVien", Storage="_ChucVu", ThisKey="MaCV", OtherKey="MaCV", IsForeignKey=true)]
		public ChucVu ChucVu
		{
			get
			{
				return this._ChucVu.Entity;
			}
			set
			{
				ChucVu previousValue = this._ChucVu.Entity;
				if (((previousValue != value) 
							|| (this._ChucVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucVu.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._ChucVu.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._MaCV = value.MaCV;
					}
					else
					{
						this._MaCV = default(int);
					}
					this.SendPropertyChanged("ChucVu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTBLs(CTBL entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_CTBLs(CTBL entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDonNhaps(HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDonNhaps(HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_LichLamViec1NV_1Ns(LichLamViec1NV_1N entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_LichLamViec1NV_1Ns(LichLamViec1NV_1N entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_PhieuHuys(PhieuHuy entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuHuys(PhieuHuy entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_PhieuKiemHangTons(PhieuKiemHangTon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuKiemHangTons(PhieuKiemHangTon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_PhieuNhapHangs(PhieuNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuNhapHangs(PhieuNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanLoai")]
	public partial class PhanLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<Mon> _Mons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public PhanLoai()
		{
			this._Mons = new EntitySet<Mon>(new Action<Mon>(this.attach_Mons), new Action<Mon>(this.detach_Mons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanLoai_Mon", Storage="_Mons", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<Mon> Mons
		{
			get
			{
				return this._Mons;
			}
			set
			{
				this._Mons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mons(Mon entity)
		{
			this.SendPropertyChanging();
			entity.PhanLoai = this;
		}
		
		private void detach_Mons(Mon entity)
		{
			this.SendPropertyChanging();
			entity.PhanLoai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuHuy")]
	public partial class PhieuHuy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieu;
		
		private string _TenPhieu;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<System.DateTime> _NgayHuy;
		
		private int _MaNV;
		
		private EntitySet<CT_Huy> _CT_Huys;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuChanging(int value);
    partial void OnMaPhieuChanged();
    partial void OnTenPhieuChanging(string value);
    partial void OnTenPhieuChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnNgayHuyChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHuyChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    #endregion
		
		public PhieuHuy()
		{
			this._CT_Huys = new EntitySet<CT_Huy>(new Action<CT_Huy>(this.attach_CT_Huys), new Action<CT_Huy>(this.detach_CT_Huys));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhieu
		{
			get
			{
				return this._MaPhieu;
			}
			set
			{
				if ((this._MaPhieu != value))
				{
					this.OnMaPhieuChanging(value);
					this.SendPropertyChanging();
					this._MaPhieu = value;
					this.SendPropertyChanged("MaPhieu");
					this.OnMaPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhieu", DbType="NVarChar(50)")]
		public string TenPhieu
		{
			get
			{
				return this._TenPhieu;
			}
			set
			{
				if ((this._TenPhieu != value))
				{
					this.OnTenPhieuChanging(value);
					this.SendPropertyChanging();
					this._TenPhieu = value;
					this.SendPropertyChanged("TenPhieu");
					this.OnTenPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHuy", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHuy
		{
			get
			{
				return this._NgayHuy;
			}
			set
			{
				if ((this._NgayHuy != value))
				{
					this.OnNgayHuyChanging(value);
					this.SendPropertyChanging();
					this._NgayHuy = value;
					this.SendPropertyChanged("NgayHuy");
					this.OnNgayHuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL")]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuHuy_CT_Huy", Storage="_CT_Huys", ThisKey="MaPhieu", OtherKey="MaPhieu")]
		public EntitySet<CT_Huy> CT_Huys
		{
			get
			{
				return this._CT_Huys;
			}
			set
			{
				this._CT_Huys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuHuy", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuHuys.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuHuys.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_Huys(CT_Huy entity)
		{
			this.SendPropertyChanging();
			entity.PhieuHuy = this;
		}
		
		private void detach_CT_Huys(CT_Huy entity)
		{
			this.SendPropertyChanging();
			entity.PhieuHuy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuKiemHangTon")]
	public partial class PhieuKiemHangTon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuKiem;
		
		private string _TenPhieu;
		
		private System.Nullable<System.DateTime> _NgayLapPhieu;
		
		private System.Nullable<System.DateTime> _NgayKiemTra;
		
		private int _MaNV;
		
		private EntitySet<CT_KT> _CT_KTs;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuKiemChanging(int value);
    partial void OnMaPhieuKiemChanged();
    partial void OnTenPhieuChanging(string value);
    partial void OnTenPhieuChanged();
    partial void OnNgayLapPhieuChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapPhieuChanged();
    partial void OnNgayKiemTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKiemTraChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    #endregion
		
		public PhieuKiemHangTon()
		{
			this._CT_KTs = new EntitySet<CT_KT>(new Action<CT_KT>(this.attach_CT_KTs), new Action<CT_KT>(this.detach_CT_KTs));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuKiem", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhieuKiem
		{
			get
			{
				return this._MaPhieuKiem;
			}
			set
			{
				if ((this._MaPhieuKiem != value))
				{
					this.OnMaPhieuKiemChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuKiem = value;
					this.SendPropertyChanged("MaPhieuKiem");
					this.OnMaPhieuKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhieu", DbType="NVarChar(50)")]
		public string TenPhieu
		{
			get
			{
				return this._TenPhieu;
			}
			set
			{
				if ((this._TenPhieu != value))
				{
					this.OnTenPhieuChanging(value);
					this.SendPropertyChanging();
					this._TenPhieu = value;
					this.SendPropertyChanged("TenPhieu");
					this.OnTenPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLapPhieu", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLapPhieu
		{
			get
			{
				return this._NgayLapPhieu;
			}
			set
			{
				if ((this._NgayLapPhieu != value))
				{
					this.OnNgayLapPhieuChanging(value);
					this.SendPropertyChanging();
					this._NgayLapPhieu = value;
					this.SendPropertyChanged("NgayLapPhieu");
					this.OnNgayLapPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKiemTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayKiemTra
		{
			get
			{
				return this._NgayKiemTra;
			}
			set
			{
				if ((this._NgayKiemTra != value))
				{
					this.OnNgayKiemTraChanging(value);
					this.SendPropertyChanging();
					this._NgayKiemTra = value;
					this.SendPropertyChanged("NgayKiemTra");
					this.OnNgayKiemTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL")]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuKiemHangTon_CT_KT", Storage="_CT_KTs", ThisKey="MaPhieuKiem", OtherKey="MaPhieuKiem")]
		public EntitySet<CT_KT> CT_KTs
		{
			get
			{
				return this._CT_KTs;
			}
			set
			{
				this._CT_KTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuKiemHangTon", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuKiemHangTons.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuKiemHangTons.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_KTs(CT_KT entity)
		{
			this.SendPropertyChanging();
			entity.PhieuKiemHangTon = this;
		}
		
		private void detach_CT_KTs(CT_KT entity)
		{
			this.SendPropertyChanging();
			entity.PhieuKiemHangTon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuNhapHang")]
	public partial class PhieuNhapHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuNhap;
		
		private int _MaNCC;
		
		private string _TenPhieuNhap;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private int _MaNV;
		
		private EntitySet<CTNhapHang> _CTNhapHangs;
		
		private EntityRef<NhaCC> _NhaCC;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuNhapChanging(int value);
    partial void OnMaPhieuNhapChanged();
    partial void OnMaNCCChanging(int value);
    partial void OnMaNCCChanged();
    partial void OnTenPhieuNhapChanging(string value);
    partial void OnTenPhieuNhapChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    #endregion
		
		public PhieuNhapHang()
		{
			this._CTNhapHangs = new EntitySet<CTNhapHang>(new Action<CTNhapHang>(this.attach_CTNhapHangs), new Action<CTNhapHang>(this.detach_CTNhapHangs));
			this._NhaCC = default(EntityRef<NhaCC>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuNhap", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhieuNhap
		{
			get
			{
				return this._MaPhieuNhap;
			}
			set
			{
				if ((this._MaPhieuNhap != value))
				{
					this.OnMaPhieuNhapChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuNhap = value;
					this.SendPropertyChanged("MaPhieuNhap");
					this.OnMaPhieuNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="Int NOT NULL")]
		public int MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					if (this._NhaCC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhieuNhap", DbType="NVarChar(50)")]
		public string TenPhieuNhap
		{
			get
			{
				return this._TenPhieuNhap;
			}
			set
			{
				if ((this._TenPhieuNhap != value))
				{
					this.OnTenPhieuNhapChanging(value);
					this.SendPropertyChanging();
					this._TenPhieuNhap = value;
					this.SendPropertyChanged("TenPhieuNhap");
					this.OnTenPhieuNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL")]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhapHang_CTNhapHang", Storage="_CTNhapHangs", ThisKey="MaPhieuNhap", OtherKey="MaPhieuNhap")]
		public EntitySet<CTNhapHang> CTNhapHangs
		{
			get
			{
				return this._CTNhapHangs;
			}
			set
			{
				this._CTNhapHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCC_PhieuNhapHang", Storage="_NhaCC", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true)]
		public NhaCC NhaCC
		{
			get
			{
				return this._NhaCC.Entity;
			}
			set
			{
				NhaCC previousValue = this._NhaCC.Entity;
				if (((previousValue != value) 
							|| (this._NhaCC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCC.Entity = null;
						previousValue.PhieuNhapHangs.Remove(this);
					}
					this._NhaCC.Entity = value;
					if ((value != null))
					{
						value.PhieuNhapHangs.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(int);
					}
					this.SendPropertyChanged("NhaCC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhapHang", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuNhapHangs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuNhapHangs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTNhapHangs(CTNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhapHang = this;
		}
		
		private void detach_CTNhapHangs(CTNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhapHang = null;
		}
	}
}
#pragma warning restore 1591
